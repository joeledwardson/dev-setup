setw -g mode-keys vi
# set -g default-terminal "screen-256color"
set -g default-terminal "tmux-256color"
# set-option -ga terminal-overrides ",xterm-256color:Tc"
# set-option -sa terminal-overrides ",xterm*:Tc"
set-option -sa terminal-overrides ",xterm-256color:RGB"
set -g pane-border-lines heavy
set -g set-titles on
set -g set-titles-string '#T'
set -g default-command "${SHELL}"
set -g allow-rename on

# allow mouse scrolling
set -g mouse on

# dont prompt before kill
bind-key & kill-window
bind-key x kill-pane

# remap prefix
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix


# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on


# Conditional clipboard settings
if-shell "uname -r | grep -i microsoft" {
    # WSL-specific settings (remove carriage returns from stupid windows newlines)
    bind-key -T copy-mode-vi v send-keys -X begin-selection
    bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "/tr -d '\r' | mnt/c/Windows/System32/clip.exe"
    bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "/tr -d '\r' | mnt/c/Windows/System32/clip.exe"
} {
    # Non-WSL settings (Linux/MacOS)
    bind-key -T copy-mode-vi v send-keys -X begin-selection
    bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
    bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
}

# special key to search backwards for text inside code blocks
bind-key C-g copy-mode ';' \
    send-keys -X clear-selection ';' \
    send-keys -X cursor-up ';' \
    send-keys -X search-backward "```" ';' \
    send-keys -X cursor-left ';' \
    send-keys -X begin-selection ';' \
    send-keys -X search-backward "```" ';' \
    send-keys -X cursor-down


# manually set vim pane navigation
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R


# Split panes using | and -
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# vim style window switching
bind -n M-u previous-window
bind -n M-p next-window

# Shift window using Ctrl-Shift-Arrow without prefix
bind-key -n M-i swap-window -t -1\; select-window -t -1
bind-key -n M-o swap-window -t +1\; select-window -t +1

# Navigation bindings
bind -T copy-mode-vi C-n send-keys -X cursor-down \; \
    send-keys -X next-prompt \; \
    send-keys -X cursor-up
bind -T copy-mode-vi C-p send-keys -X previous-prompt \; \
    send-keys -X cursor-up
bind C-p copy-mode ';' \
    send-keys -X begin-selection ';' \
    send-keys -X previous-prompt ';' \
    send-keys -X cursor-up




# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'catppuccin/tmux#v2.1.2' # See https://github.com/catppuccin/tmux/tags for additional tags
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'
# set theme
set -g @catppuccin_flavor 'mocha' # latte, frappe, macchiato or mocha

# LEAVE for now as zsh sets the titles itself!
# set -g @catppuccin_window_text "#{?#{!=:#W,fish},#W,#T}#{?window_zoomed_flag, Z,}"
# set -g @catppuccin_window_current_text "#{?#{!=:#W,fish},#W,#T}#{?window_zoomed_flag, Z,}"
set -g @catppuccin_window_status_style "rounded"
set -ogq @catppuccin_pane_border_status "yes"


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

