# only load mod where specified
if [[ -n "$ZSH_DEBUGRC" ]]; then
  zmodload zsh/zprof
fi

# history settings
# Add these near the top of your .zshrc, before loading zinit
HISTFILE=~/.zsh_history
HISTSIZE=50000
SAVEHIST=50000
# History settings
setopt SHARE_HISTORY          # Share history between sessions
setopt INC_APPEND_HISTORY     # Add commands to history immediately
setopt EXTENDED_HISTORY       # Add timestamps to history
setopt HIST_FIND_NO_DUPS     # Don't display duplicates during searches
setopt HIST_IGNORE_ALL_DUPS  # Don't record duplicated entries
# other options
setopt interactivecomments

# rust path
export PATH="$HOME/.cargo/bin:$PATH"

# added by pipx (https://github.com/pipxproject/pipx)
export PATH="$HOME/.local/bin:$PATH"

# print each path entry on a new line
pretty-path() {
    echo "${1:-$PATH}" | sed "s/:/\n/g"
}

# allow calling "cursor ." from terminal to open cursor AI
function cursor {
  nohup "$HOME/.local/cursor.AppImage" "$@" >/dev/null 2>&1 &
  disown
}

function reload-tmux {
  tmux source-file ~/.tmux.conf
}
function reload-zsh {
  source ~/.zshrc
}
function copyfile {
    # Resolve the full path of the file
    local fullpath=$(realpath $1)
    if [ ! -e $fullpath ]; then
        echo "Error: Invalid file path" >&2
        return 1
    fi

    # Copy the file path to the clipboard
    echo "file://$fullpath" | xclip -selection clipboard -t text/uri-list
    echo "File path copied to clipboard: $fullpath"
}

# setup tmux plugin manager
if [[ ! -e "$HOME/.tmux/plugins/tpm" ]]; then
  git clone https://github.com/tmux-plugins/tpm "$HOME/.tmux/plugins/tpm"
fi


# install and load zinit
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"


# Create the directory for cusotm zsh completions
mkdir -p $HOME/.local/share/custom_zsh_completions
# add custom completions to cusotm path
fpath=($HOME/.local/share/custom_zsh_completions $fpath)

# volta
volta completions zsh > $HOME/.local/share/custom_zsh_completions/_volta
export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"

# Load from cache immediately
autoload -U compinit
compinit

# Plugins
eval "$(oh-my-posh init zsh --config $HOME/.config/ohmyposh.json)"
zinit light z-shell/zsh-navigation-tools
zinit light zsh-users/zsh-autosuggestions
zinit light zsh-users/zsh-completions
zinit light Aloxaf/fzf-tab
zinit ice wait silent
zinit light zsh-users/zsh-syntax-highlighting
zinit ice wait silent
zinit light MichaelAquilina/zsh-you-should-use
zinit ice wait silent
zinit snippet OMZP::colored-man-pages
zinit ice wait silent
zinit light xPMo/zsh-ls-colors
zinit ice wait lucid
zinit load davidde/git
zinit ice lucid wait'0'
zinit light joshskidmore/zsh-fzf-history-search
zinit ice lucid wait'0'
zinit light l4u/zsh-output-highlighting
zinit ice wait lucid pick"flatpak.plugin.zsh" as"completion"
zinit light bilelmoussaoui/flatpak-zsh-completion


# Using ice syntax
zinit wait lucid for \
    atload"source <(glab completion -s zsh)" \
    atload"command -v docker >/dev/null && ! uname -r | grep -iq microsoft && source <(docker completion zsh)" \
    atload"source <(gh completion -s zsh)" \
    atload"command -v fzf >/dev/null && source <(fzf --zsh)" \
        zdharma-continuum/null

# sertup bit warden to BW_SESSION var
function setup-bw() {
  if ! command -v jq >/dev/null; then
    echo "jq not found!"
    return 1;
  fi

  current_status="$(bw status | jq -r .status)"
  case $current_status in
      "unauthenticated")
          echo "Please log in first"
          bw login
          ;;
      "locked")
          export BW_SESSION=$(bw unlock --raw)
          ;;
      "unlocked")
          echo "Already unlocked"
          ;;
  esac
}

# control left/right because im lazy and dont want to un-learn
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word

# fzf tab config
# # disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
# NOTE: don't use escape sequences (like '%F{red}%d%f') here, fzf-tab will ignore them
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# force zsh not to show completion menu, which allows fzf-tab to capture the unambiguous prefix
zstyle ':completion:*' menu no
# preview directory's content with eza when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
# custom fzf flags
# NOTE: fzf-tab does not follow FZF_DEFAULT_OPTS by default
zstyle ':fzf-tab:*' fzf-flags --color=fg:1,fg+:2 --bind=tab:accept
# To make fzf-tab follow FZF_DEFAULT_OPTS.
# NOTE: This may lead to unexpected behavior since some flags break this plugin. See Aloxaf/fzf-tab#455.
zstyle ':fzf-tab:*' use-fzf-default-opts yes
# switch group using `<` and `>`
zstyle ':fzf-tab:*' switch-group '<' '>'

# fzf tmux popup (REMOVED, breaks when not in tmux)
# zstyle ':fzf-tab:*' fzf-command ftb-tmux-popup

# apply to all command
zstyle ':fzf-tab:*' popup-min-size 80 12
# preview directory's content with eza when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1a --color=always $realpath'


# eza aliases stolen from here: https://github.com/MohamedElashri/eza-zsh/blob/main/eza-zsh.plugin.zsh
alias l='eza --long --icons -bF' # Extended details with binary sizes and type indicators
alias ll='eza --long -a' # Long format, including hidden files
alias la='eza -a --group-directories-first' # Show all files, with directories listed first
alias lx='eza -a --group-directories-first --extended' # Show all files and extended attributes, directories first
alias lT='eza --tree --long' # Tree view with extended details
alias lr='eza --long --modified --sort=modified -r' # sort by modified desc



# stolen from OMZ tmux plugin
# Essential tmux aliases
alias ta='tmux attach'     # Attach to a session
alias tad='tmux attach -d -t' # Attach to session in detached mode
alias ts='tmux new-session -s' # Start new session with name
alias tl='tmux list-sessions' # List all sessions
alias tksv='tmux kill-server' # Kill the tmux server
alias tkss='tmux kill-session -t' # Kill a specific session
# nixGL for kitty
alias kitty='nixGL kitty'
alias kitten='nixGL kitten'


# tmux escape chars for `next-prompt` and `previous-prompt`
function tmux_preexec() {
  print -Pn '\e]133;A\a'
}
function tmux_precmd() {
  print -Pn '\e]133;B\a'
}


# Add hooks
autoload -U add-zsh-hook
add-zsh-hook preexec tmux_preexec
add-zsh-hook precmd tmux_precmd


if [ -e $HOME/.nix-profile/etc/profile.d/nix.sh ]; then . $HOME/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer

if [ -e $HOME/.config/zshrclocal ]; then
  source $HOME/.config/zshrclocal
fi

if [[ -n "$ZSH_DEBUGRC" ]]; then
  zprof
fi

