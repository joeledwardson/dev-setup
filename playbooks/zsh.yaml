---
- name: System-level installations
  hosts: all
  become: true
  tasks:
    - name: Install required packages
      apt:
        name: 
          - zsh
          - git
          - curl
          - tmux
          - xclip
          - xsel
        state: present
        update_cache: yes
        cache_valid_time: 3600

- name: User-level configurations
  hosts: all
  tasks:
    - name: Check Oh My Zsh installation
      command: test -d $HOME/.oh-my-zsh
      register: ohmy_check
      ignore_errors: true
      changed_when: false

    - name: Install Oh My Zsh
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
      when: ohmy_check.rc != 0

    - name: Set Zsh as default shell
      user:
        name: "{{ ansible_user_id }}"
        shell: /usr/bin/zsh
      become: true

    - name: Check if current shell is zsh
      shell: ps -p $$ -o comm=
      register: current_shell
      changed_when: false

    - name: Notify user to log out and back in
      debug:
        msg: |
          WARNING: Your default shell has been changed to zsh, but your current session is still using {{ current_shell.stdout }}.
          Please log out and log back in for the changes to take effect.
          Alternatively, you can run 'exec zsh' in your current terminal to switch immediately.
      when: "'zsh' not in current_shell.stdout"

    - name: Check existing tmux config
      stat:
        path: "{{ ansible_env.HOME }}/.tmux.conf"
      register: tmux_conf

    - name: Backup existing non-symlink config
      command: mv {{ ansible_env.HOME }}/.tmux.conf {{ ansible_env.HOME }}/.tmux.conf.backup_{{ ansible_date_time.iso8601 }}
      register: backup_result
      when: tmux_conf.stat.exists and not tmux_conf.stat.islnk

    - name: Create symlink for tmux config
      file:
        src: "{{ (playbook_dir + '/../configs/.tmux.conf') | realpath }}"
        dest: "{{ ansible_env.HOME }}/.tmux.conf"
        state: link
      when: not tmux_conf.stat.exists or not tmux_conf.stat.islnk

    - name: Check existing zsh config
      stat:
        path: "{{ ansible_env.HOME }}/.zshrc"
      register: zshrc_conf

    - name: Backup existing non-symlink zsh config
      command: mv {{ ansible_env.HOME }}/.zshrc {{ ansible_env.HOME }}/.zshrc.backup_{{ ansible_date_time.iso8601 }}
      register: backup_result
      when: zshrc_conf.stat.exists and not zshrc_conf.stat.islnk

    - name: Create symlink for zsh config
      file:
        src: "{{ (playbook_dir + '/../configs/.zshrc') | realpath }}"
        dest: "{{ ansible_env.HOME }}/.zshrc"
        state: link
      when: not zshrc_conf.stat.exists or not zshrc_conf.stat.islnk
    

