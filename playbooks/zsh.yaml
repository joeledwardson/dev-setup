---
- name: System-level installations
  hosts: all
  become: true
  tasks:
    - name: Install required packages
      apt:
        name: 
          - zsh
          - git
          - curl
          - xclip
          - xsel
          - pipx
          - vim-gtk3
          # page to be used in man pages
          - most 
          - copyq
          # For CopyQ
          - libdbi-perl
          - libdbd-pg-perl
        state: present
        update_cache: yes
        cache_valid_time: 3600

- name: User-level configurations
  hosts: all
  tasks:
    - name: Check Oh My Zsh installation
      command: test -d $HOME/.oh-my-zsh
      register: ohmy_check
      ignore_errors: true
      changed_when: false

    - name: Install Oh My Zsh
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
      when: ohmy_check.rc != 0

    - name: Set Zsh as default shell
      user:
        name: "{{ ansible_user_id }}"
        shell: /usr/bin/zsh
      become: true

    - name: Check if current shell is zsh
      shell: ps -p $$ -o comm=
      register: current_shell
      changed_when: false

    - name: Notify user to log out and back in
      debug:
        msg: |
          WARNING: Your default shell has been changed to zsh, but your current session is still using {{ current_shell.stdout }}.
          Please log out and log back in for the changes to take effect.
          Alternatively, you can run 'exec zsh' in your current terminal to switch immediately.
      when: "'zsh' not in current_shell.stdout"

    - name: Check if TPM (Tmux Plugin Manager) exists
      command: test -d $HOME/.tmux/plugins/tpm
      register: tpm_check
      ignore_errors: true
      changed_when: false

    - name: Clone TPM repository
      git:
        repo: https://github.com/tmux-plugins/tpm
        dest: "{{ ansible_env.HOME }}/.tmux/plugins/tpm"
      when: tpm_check.rc != 0

    - name: Configure tmux
      include_tasks: tasks/manage_dotfile.yml
      vars:
        dotfile: .tmux.conf

    - name: Configure zsh
      include_tasks: tasks/manage_dotfile.yml
      vars:
        dotfile: .zshrc

    - name: Check if Homebrew is installed
      shell: which brew
      register: brew_exists
      ignore_errors: true
      changed_when: false

    - name: Install Homebrew
      shell: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      when: brew_exists.rc != 0

    - name: remove apt conflicting brew packages
      apt:
        name:
          - pspg
          - fzf
          - tmux
          - gh
        state: absent
      become: true

    - name: Install brew packages
      homebrew:
        name:
          - aichat
          - pspg
          - gh
          - git-delta
          # at the moment, only brew has tmux v3.4+
          - tmux
          # for fzf zsh extensions
          - fzf
        state: present
        update_homebrew: true  # Optional: updates brew before installing

    - name: Configure vim
      include_tasks: tasks/manage_dotfile.yml
      vars:
        dotfile: .vimrc

    - name: Check if pyenv is installed
      shell: which pyenv 
      register: pyenv_exists
      ignore_errors: true
      changed_when: false

    - name: Install pyenv using install script
      shell: curl https://pyenv.run | bash
      when: pyenv_exists.rc != 0

    - name: Configure CopyQ autostart
      include_tasks: tasks/manage_dotfile.yml
      vars:
        dotfile: copyq.desktop
        dest_file: "{{ ansible_env.HOME }}/.config/autostart/copyq.desktop"
        delete_existing: true

    - name: Copy aichat config
      include_tasks: tasks/manage_dotfile.yml
      vars:
        dotfile: aichat.yaml
        dest_file: "{{ ansible_env.HOME }}/.config/aichat/config.yaml"


    - name: Copy git config 
      include_tasks: tasks/manage_dotfile.yml
      vars:
        dotfile: .gitconfig 
        dest_file: "{{ ansible_env.HOME }}/.gitconfig"


