---
- name: System-level installations
  hosts: all
  become: true
  tasks:
    - name: Install required packages
      apt:
        name: 
          - zsh
          - bat
          - git
          - tldr
          - pspg # pager for psql
          - curl
          - xclip
          - xsel
          - pipx
          - vim-gtk3
          # page to be used in man pages
          - most 
          - copyq
          # For CopyQ
          - libdbi-perl
          - libdbd-pg-perl
          - bison             # required for tmux
          - libncurses-dev # required for tmux
          - libevent-dev # required for tmux
          - build-essential  # Provides make, gcc, and basic build tools
          - automake        # For generating Makefiles
          - autoconf        # Works with automake
          - pkg-config # required for tmux
        state: present
        update_cache: yes
        cache_valid_time: 3600

- name: User-level configurations
  hosts: all
  collections:
    - community.general
  tasks:
    - name: Set Zsh as default shell
      user:
        name: "{{ ansible_user_id }}"
        shell: /usr/bin/zsh
      become: true

    - name: Install lazygit
      shell: |
        LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": *"v\K[^"]*')
        curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/download/v${LAZYGIT_VERSION}/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
        tar xf lazygit.tar.gz lazygit
        install lazygit -D -t /usr/local/bin/
        rm lazygit.tar.gz lazygit
      args:
        creates: /usr/local/bin/lazygit
      become: true

    - name: Install pyenv
      git:
        repo: https://github.com/pyenv/pyenv.git
        dest: "{{ ansible_env.HOME }}/.pyenv"
        update: "{{ update_if_exists | default(true) }}"

    - name: Install Rust
      shell: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        . "$HOME/.cargo/env"
      args:
        creates: "{{ ansible_env.HOME }}/.cargo/bin/cargo"

    - name: Update Rust if needed
      shell: |
        . "$HOME/.cargo/env"
        rustup update stable
      when: '"Up to date" not in lookup("pipe", "$HOME/.cargo/bin/rustup check")'

    - name: Install aichat via cargo module
      community.general.cargo:
        name: aichat
        state: present

    - name: Install git-delta via cargo module
      community.general.cargo:
        name: git-delta
        state: present

    - name: Install fnm
      shell: curl -fsSL https://fnm.vercel.app/install --skip-shell | bash
      args:
        creates: "{{ ansible_env.HOME }}/.local/share/fnm"        

    - name: Install GitHub CLI
      shell: |
        TEMPDIR=$(mktemp -d)
        cd "$TEMPDIR"
        VERSION=$(curl -s "https://api.github.com/repos/cli/cli/releases/latest" | grep -Po '"tag_name": *"v\K[^"]*')
        curl -Lo gh.deb "https://github.com/cli/cli/releases/download/v${VERSION}/gh_${VERSION}_linux_amd64.deb"
        dpkg -i gh.deb
        rm -rf "$TEMPDIR"
      args:
        creates: /usr/bin/gh
      become: true

    - name: Clone and install tmux
      shell: |
        TMPDIR=$(mktemp -d) && \
        git clone https://github.com/tmux/tmux.git $TMPDIR && \
        cd $TMPDIR && \
        sh autogen.sh && \
        ./configure && \
        make && \
        make install && \
        rm -rf $TMPDIR
      args:
        creates: /usr/local/bin/tmux
      become: yes

    - name: Configure dotfiles and autostart
      include_tasks: tasks/manage_dotfile.yml
      loop:
        - .tmux.conf
        - .zshrc
        - .vimrc
        - .gitconfig
        - .gitignore_global
        - .p10k.zsh
        - file: copyq.desktop
          dest_file: "{{ ansible_env.HOME }}/.config/autostart/copyq.desktop"
          delete_existing: true
        - file: aichat.yaml
          dest_file: "{{ ansible_env.HOME }}/.config/aichat/config.yaml"
      vars:
        dotfile: "{{ item.file | default(item) }}"

    - name: Set Windows Terminal settings path
      set_fact:
        wt_settings_dir: "/mnt/c/Users/joele/AppData/Local/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState"

    - name: Check if Windows Terminal directory exists
      stat:
        path: "{{ wt_settings_dir }}"
      register: wt_dir
      ignore_errors: yes

    # TODO need to update this with powershell based link create
    #- name: Copy windows terminal config
      #include_tasks: tasks/manage_dotfile.yml
      #vars:
        #dotfile: windowsterminal.json 
        #dest_file: "{{ wt_settings_dir }}/settings.json"
        #overwrite_dest: true 
        #use_copy: true

