#!/bin/sh

WIN_DIR="win"
WINGET_FILE="$WIN_DIR/winget.json"
SCOOP_FILE="$WIN_DIR/scoop.json"

mkdir -p "$WIN_DIR"

restart_hyprland()
{
  if command -v hyprctl >/dev/null && test -n "$HYPRLAND_INSTANCE_SIGNATURE"; then
    echo "hyprland active, restarting..."
    hyprctl reload
  else
    echo "no hyprland active, skipping restart..."
  fi
  }

case "$1" in
  winpush)
    echo "Exporting winget packages..."
    winget export --nowarn --output "$WINGET_FILE" --include-versions

    echo "Exporting scoop packages..."
    scoop export > "$SCOOP_FILE"
    ;;

  winpull)
    if [[ -f "$WINGET_FILE" ]]; then
      echo "Importing winget packages..."
      winget import --accept-package-agreements --ignore-unavailable --accept-source-agreements --import-file "$WINGET_FILE"
    else
      echo "No winget export file found at $WINGET_FILE"
    fi

    if [[ -f "$SCOOP_FILE" ]]; then
      echo "Importing scoop packages..."
      scoop import "$SCOOP_FILE"
    else
      echo "No scoop export file found at $SCOOP_FILE"
    fi
    ;;

  os)
    echo "rebuilding nix..."
    sudo nixos-rebuild switch --flake .
    echo "installing yazi plugins..."
    ya pkg install
    echo "updating fish shell plugins..."
    fish -c "fisher update"
    # setup tmux plugin manager
    if [[ ! -e "$HOME/.tmux/plugins/tpm" ]]; then
      echo "tpm not installing, installing now..."
      git clone https://github.com/tmux-plugins/tpm "$HOME/.tmux/plugins/tpm"
    fi

    restart_hyprland
    echo "done!"
    ;;
  dotfiles)
    echo "running dotbot..."
    dotbot -c install.conf.yaml
    custom_src=$(realpath "./hosts/$(hostname)/custom.conf")
    custom_dest=~/.config/hypr/custom.conf
    if [ -f "$custom_src" ]; then
      echo "hypr custom.conf exists, symlinking it..."
      ln -sf "$custom_src" "$custom_dest"
     elif [ ! -f "$custom_dest" ]; then
      echo "no custom.conf, creating blank file..."
      touch "$custom_dest"
    fi
    restart_hyprland
    echo "done!"
    # TODO sync brave settings? /home/jollof/.config/BraveSoftware/Brave-Browser/Work-Profile/Preferences
    ;;
  clean)
    nix-collect-garbage -d
    ;;
  toc)
    doctoc README.md
    ;;
  copybrave)
    echo "checking scratchpads dir is created..."
    mkdir -p scratchpads
    echo "copying brave preferences file..."
    cp ~/.config/BraveSoftware/Brave-Browser/Default/Preferences ./scratchpads/brave-preferences.json
    echo "fomratting brave preferences...."
    cat scratchpads/brave-preferences.json | prettierd scratchpads/brave-preferences.json > scratchpads/brave-preferences-formatted.json
    ;;

  *)
    echo "Usage: $0 {os|dotfiles|clean|toc|winpull|winpush|copybrave}"
    ;;
esac

